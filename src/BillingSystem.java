
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.BaseFont;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Rectangle;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import java.io.ByteArrayOutputStream;
import java.io.FileInputStream;
import javax.swing.JFrame;

public final class BillingSystem extends javax.swing.JFrame {

    private static BillingSystem nObj = null;

    JTextField nInputText;

    Connection nCon = null;
    PreparedStatement nPs = null;
    ResultSet nRs = null;

    String nBillingItem, nPayMentStatus = "", nBillingItemUnit;
    Double nBillingItemRate, nBillingItemQty;

    static double nGrandTotal = 0.0;
    static double nTotalQty = 0.0;
    static int nSelRow = -1;

    Vector<String> nSuggestiont = new Vector<String>();

    DecimalFormat nDC = new DecimalFormat("#.00");

    private BillingSystem() {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
        Toolkit nToolKit = Toolkit.getDefaultToolkit();
        setIconImage(nToolKit.getImage(getClass().getResource("icon/icon.png")));
        initComponents();
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        loadSuggestion();
        getSuggesion();
        Toolkit ntk = Toolkit.getDefaultToolkit();
        int xSize = ntk.getScreenSize().width;
        int ySize = ntk.getScreenSize().height;
        this.setSize(xSize, ySize - 50);
        jPanel1.setSize(xSize, ySize - 50);
        jPanel2.setSize(new Dimension(xSize, 40));
        jPanel3.setSize(new Dimension(xSize - 20, 120));
        jPanel5.setSize(new Dimension(xSize - 20, ySize - 260));
        jPanel1.add(jPanel2);
        jPanel1.add(jPanel3);
        jPanel1.add(jPanel5);
        this.add(jPanel1);
        JTableHeader nTableHader = nItemTable.getTableHeader();
        nTableHader.setFont(new Font("Courier New", Font.BOLD, 20));

        DefaultTableCellRenderer nHeaderRenderer = (DefaultTableCellRenderer) nTableHader.getDefaultRenderer();
        nHeaderRenderer.setHorizontalAlignment(JLabel.CENTER);

        DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
        rightRenderer.setHorizontalAlignment(JLabel.RIGHT);

        nItemTable.getColumnModel().getColumn(1).setCellRenderer(rightRenderer);
        nItemTable.getColumnModel().getColumn(2).setCellRenderer(rightRenderer);
        nItemTable.getColumnModel().getColumn(3).setCellRenderer(rightRenderer);
        nItemTable.getColumnModel().getColumn(4).setCellRenderer(rightRenderer);
        addWindowListener(new WindowAdapter() {

            @Override
            public void windowClosing(WindowEvent e) {
                super.windowClosing(e);//To change body of generated methods, choose Tools | Templates.
                nObj = null;
                nGrandTotal = 0.0;
                nTotalQty = 0.0;
                nSelRow = -1;
                dispose();
            }

        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        nCustomerNameTextField = new javax.swing.JTextField();
        nCustomerMobileTextField1 = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        nItemTable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        nTitemQty = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        nTamountTextField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        nItemRateTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        nBillingItemQtyTextField = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        nDiscountTextField = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        nPaybleAmountTextField = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel15 = new javax.swing.JLabel();
        nRecivedAmountTextField = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        nReturnAmountTextField = new javax.swing.JTextField();
        nBillingItemCombo = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        nExtraInfoTextArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("BILLING SYSTEM");

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setLayout(null);

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "BILLING SYSTEM", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_BOTTOM, new java.awt.Font("Arial", 1, 18), new java.awt.Color(51, 153, 255))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1658, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel2);
        jPanel2.setBounds(0, 0, 1670, 40);

        jPanel3.setBackground(new java.awt.Color(51, 51, 51));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "CUSTOMER  DETAILS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14), new java.awt.Color(204, 204, 204))); // NOI18N
        jPanel3.setLayout(null);

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(204, 204, 204));
        jLabel6.setText("CUSTOMER NAME *");
        jPanel3.add(jLabel6);
        jLabel6.setBounds(440, 30, 160, 17);

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(204, 204, 204));
        jLabel7.setText("CUSTOMER MOBILE ");
        jLabel7.setToolTipText("");
        jPanel3.add(jLabel7);
        jLabel7.setBounds(870, 30, 200, 17);

        nCustomerNameTextField.setBackground(new java.awt.Color(204, 204, 204));
        nCustomerNameTextField.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        nCustomerNameTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                nCustomerNameTextFieldFocusLost(evt);
            }
        });
        nCustomerNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nCustomerNameTextFieldActionPerformed(evt);
            }
        });
        nCustomerNameTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nCustomerNameTextFieldKeyTyped(evt);
            }
        });
        jPanel3.add(nCustomerNameTextField);
        nCustomerNameTextField.setBounds(440, 60, 250, 30);

        nCustomerMobileTextField1.setBackground(new java.awt.Color(204, 204, 204));
        nCustomerMobileTextField1.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        nCustomerMobileTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                nCustomerMobileTextField1FocusLost(evt);
            }
        });
        nCustomerMobileTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nCustomerMobileTextField1ActionPerformed(evt);
            }
        });
        nCustomerMobileTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nCustomerMobileTextField1KeyTyped(evt);
            }
        });
        jPanel3.add(nCustomerMobileTextField1);
        nCustomerMobileTextField1.setBounds(870, 60, 250, 30);

        jPanel1.add(jPanel3);
        jPanel3.setBounds(10, 70, 1660, 110);

        jPanel5.setBackground(new java.awt.Color(51, 51, 51));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "BILLING DETAILS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14), new java.awt.Color(204, 204, 204))); // NOI18N
        jPanel5.setLayout(null);

        nItemTable.setAutoCreateRowSorter(true);
        nItemTable.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        nItemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ITEM NAME", "QUANTITY", "UNIT", "RATE", "AMOUNT"
            }
        ));
        nItemTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        nItemTable.setOpaque(false);
        nItemTable.setRowHeight(25);
        nItemTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nItemTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(nItemTable);
        if (nItemTable.getColumnModel().getColumnCount() > 0) {
            nItemTable.getColumnModel().getColumn(0).setPreferredWidth(200);
        }

        jPanel5.add(jScrollPane1);
        jScrollPane1.setBounds(30, 150, 850, 410);

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 204, 204));
        jLabel4.setText("TOTAL OUANTITY");
        jPanel5.add(jLabel4);
        jLabel4.setBounds(210, 570, 140, 30);

        nTitemQty.setBackground(new java.awt.Color(204, 204, 204));
        nTitemQty.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        nTitemQty.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        nTitemQty.setText("0");
        jPanel5.add(nTitemQty);
        nTitemQty.setBounds(360, 570, 90, 30);

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(204, 204, 204));
        jLabel5.setText("SUB TOTAL");
        jPanel5.add(jLabel5);
        jLabel5.setBounds(640, 570, 100, 30);

        nTamountTextField.setBackground(new java.awt.Color(204, 204, 204));
        nTamountTextField.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        nTamountTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        nTamountTextField.setText("0");
        jPanel5.add(nTamountTextField);
        nTamountTextField.setBounds(750, 570, 130, 30);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/bill.png"))); // NOI18N
        jButton1.setContentAreaFilled(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton1);
        jButton1.setBounds(1420, 30, 130, 90);

        jLabel8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(204, 204, 204));
        jLabel8.setText("  GENERATE INVOICE");
        jPanel5.add(jLabel8);
        jLabel8.setBounds(1400, 130, 150, 17);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/remove.png"))); // NOI18N
        jButton2.setContentAreaFilled(false);
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton2);
        jButton2.setBounds(1430, 310, 110, 90);

        jLabel9.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(204, 204, 204));
        jLabel9.setText(" REMOVE ITEM");
        jPanel5.add(jLabel9);
        jLabel9.setBounds(1430, 410, 120, 17);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/update.png"))); // NOI18N
        jButton3.setContentAreaFilled(false);
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton3);
        jButton3.setBounds(1430, 180, 100, 90);

        jLabel10.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(204, 204, 204));
        jLabel10.setText("  MODIFY ITEM");
        jPanel5.add(jLabel10);
        jLabel10.setBounds(1420, 270, 110, 17);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/rubber.png"))); // NOI18N
        jButton4.setContentAreaFilled(false);
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton4);
        jButton4.setBounds(1430, 450, 110, 90);

        jLabel12.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(204, 204, 204));
        jLabel12.setText("     CLEAR ALL");
        jPanel5.add(jLabel12);
        jLabel12.setBounds(1430, 550, 110, 17);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 204));
        jLabel1.setText("ENTER ITEM NAME *");
        jPanel5.add(jLabel1);
        jLabel1.setBounds(30, 50, 160, 17);

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 204, 204));
        jLabel3.setText("ITEM RATE ");
        jPanel5.add(jLabel3);
        jLabel3.setBounds(380, 50, 120, 17);

        nItemRateTextField.setBackground(new java.awt.Color(204, 204, 204));
        nItemRateTextField.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jPanel5.add(nItemRateTextField);
        nItemRateTextField.setBounds(380, 80, 220, 30);

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 204, 204));
        jLabel2.setText("ITEM QUANTITY *");
        jPanel5.add(jLabel2);
        jLabel2.setBounds(630, 50, 120, 17);

        nBillingItemQtyTextField.setBackground(new java.awt.Color(204, 204, 204));
        nBillingItemQtyTextField.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        nBillingItemQtyTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nBillingItemQtyTextFieldKeyPressed(evt);
            }
        });
        jPanel5.add(nBillingItemQtyTextField);
        nBillingItemQtyTextField.setBounds(630, 80, 240, 30);

        jPanel4.setBackground(new java.awt.Color(51, 51, 51));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "BILLING HISTORY", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14), new java.awt.Color(204, 204, 204))); // NOI18N
        jPanel4.setLayout(null);

        jLabel13.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(204, 204, 204));
        jLabel13.setText("DISCOUNT (%)");
        jPanel4.add(jLabel13);
        jLabel13.setBounds(40, 50, 130, 30);

        nDiscountTextField.setBackground(new java.awt.Color(204, 204, 204));
        nDiscountTextField.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        nDiscountTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        nDiscountTextField.setText("0");
        nDiscountTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nDiscountTextFieldActionPerformed(evt);
            }
        });
        nDiscountTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nDiscountTextFieldKeyPressed(evt);
            }
        });
        jPanel4.add(nDiscountTextField);
        nDiscountTextField.setBounds(199, 50, 220, 30);

        jLabel14.setBackground(new java.awt.Color(204, 204, 204));
        jLabel14.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(204, 204, 204));
        jLabel14.setText("PAYBLE AMOUNT");
        jPanel4.add(jLabel14);
        jLabel14.setBounds(40, 110, 150, 40);

        nPaybleAmountTextField.setBackground(new java.awt.Color(204, 204, 204));
        nPaybleAmountTextField.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        nPaybleAmountTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        nPaybleAmountTextField.setText("0");
        jPanel4.add(nPaybleAmountTextField);
        nPaybleAmountTextField.setBounds(200, 110, 220, 50);
        jPanel4.add(jSeparator1);
        jSeparator1.setBounds(20, 200, 420, 10);

        jLabel15.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(204, 204, 204));
        jLabel15.setText("RECIVED AMOUNT *");
        jPanel4.add(jLabel15);
        jLabel15.setBounds(20, 240, 190, 22);

        nRecivedAmountTextField.setBackground(new java.awt.Color(204, 204, 204));
        nRecivedAmountTextField.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        nRecivedAmountTextField.setForeground(new java.awt.Color(0, 153, 102));
        nRecivedAmountTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        nRecivedAmountTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nRecivedAmountTextFieldKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nRecivedAmountTextFieldKeyTyped(evt);
            }
        });
        jPanel4.add(nRecivedAmountTextField);
        nRecivedAmountTextField.setBounds(20, 270, 200, 60);

        jLabel16.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(204, 204, 204));
        jLabel16.setText("RETURN AMOUNT");
        jPanel4.add(jLabel16);
        jLabel16.setBounds(260, 240, 170, 22);

        nReturnAmountTextField.setBackground(new java.awt.Color(204, 204, 204));
        nReturnAmountTextField.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        nReturnAmountTextField.setForeground(new java.awt.Color(255, 51, 51));
        nReturnAmountTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        nReturnAmountTextField.setText("0");
        jPanel4.add(nReturnAmountTextField);
        nReturnAmountTextField.setBounds(260, 270, 180, 60);

        jPanel5.add(jPanel4);
        jPanel4.setBounds(920, 40, 460, 400);

        nBillingItemCombo.setBackground(new java.awt.Color(204, 204, 204));
        nBillingItemCombo.setEditable(true);
        nBillingItemCombo.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        nBillingItemCombo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nBillingItemComboMouseClicked(evt);
            }
        });
        jPanel5.add(nBillingItemCombo);
        nBillingItemCombo.setBounds(30, 80, 320, 30);

        jLabel11.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(204, 204, 204));
        jLabel11.setText("EXTRA INFO.");
        jPanel5.add(jLabel11);
        jLabel11.setBounds(920, 460, 120, 17);

        nExtraInfoTextArea.setBackground(new java.awt.Color(204, 204, 204));
        nExtraInfoTextArea.setColumns(20);
        nExtraInfoTextArea.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        nExtraInfoTextArea.setRows(5);
        jScrollPane2.setViewportView(nExtraInfoTextArea);

        jPanel5.add(jScrollPane2);
        jScrollPane2.setBounds(920, 490, 460, 110);

        jPanel1.add(jPanel5);
        jPanel5.setBounds(10, 210, 1660, 640);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1669, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1047, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public static BillingSystem createObject() {
        if (nObj == null) {
            nObj = new BillingSystem();
        } else {
            JOptionPane.showMessageDialog(null, "Window Already Open.");
        }
        return nObj;
    }
    private void nBillingItemQtyTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nBillingItemQtyTextFieldKeyPressed
        // TODO add your handling code here:
        switch (evt.getKeyCode()) {
            case KeyEvent.VK_ENTER:
                loadTable();
                nInputText.requestFocusInWindow();
                break;
            default:
        }
    }//GEN-LAST:event_nBillingItemQtyTextFieldKeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

        double nRA, nRQty, nTotalPay;
        if (nSelRow == -1) {
            JOptionPane.showMessageDialog(null, "Please Select Item");
        } else {
            DefaultTableModel nDTM = (DefaultTableModel) nItemTable.getModel();
            nRA = Double.parseDouble(nDTM.getValueAt(nSelRow, 3).toString());
            nRQty = Double.parseDouble(nDTM.getValueAt(nSelRow, 1).toString());
            nGrandTotal = nGrandTotal - nRA;
            nTotalQty = nTotalQty - nRQty;
            nTotalPay = nGrandTotal + Double.parseDouble(nDiscountTextField.getText());
            nTamountTextField.setText("" + nDC.format(nGrandTotal));
            nTitemQty.setText("" + nTotalQty);
            nPaybleAmountTextField.setText("" + nDC.format(nTotalPay));
            nDTM.removeRow(nSelRow);
            nSelRow = -1;
        }


    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if (nSelRow == -1) {
            JOptionPane.showMessageDialog(null, "Select Item for Edit.");
        } else {

            DefaultTableModel TD = (DefaultTableModel) nItemTable.getModel();
            String nObj[] = {TD.getValueAt(nSelRow, 0).toString(), TD.getValueAt(nSelRow, 1).toString(), TD.getValueAt(nSelRow, 2).toString(), TD.getValueAt(nSelRow, 3).toString(), TD.getValueAt(nSelRow, 4).toString()};
            EditItem.getTableData(nObj);
        }


    }//GEN-LAST:event_jButton3ActionPerformed

    private void nItemTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nItemTableMouseClicked
        // TODO add your handling code here:
        nSelRow = nItemTable.getSelectedRow();
    }//GEN-LAST:event_nItemTableMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        DefaultTableModel nModelTable = (DefaultTableModel) nItemTable.getModel();
        DateFormat nInvoiceFormate = new SimpleDateFormat("ddHHmmss");
        Date nSysDate = new Date();
        if (nModelTable.getRowCount() == 0 || nCustomerNameTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Invalid Details.");
        } else {
            String userHomeFolder = System.getProperty("user.home");
            File nInvoiceFolder = new File(userHomeFolder + "\\Desktop\\customer_invoice");
            File nInvoiceFile = null;

            try {

                if (nInvoiceFolder.exists()) {
                    nInvoiceFile = new File(nInvoiceFolder + "\\" + nCustomerNameTextField.getText().toUpperCase() + "_" + nInvoiceFormate.format(nSysDate) + ".pdf");
                    nInvoiceFile.createNewFile();

                } else {
                    nInvoiceFolder.mkdir();
                    nInvoiceFile = new File(nInvoiceFolder + "\\" + nCustomerNameTextField.getText().toUpperCase() + "_" + nInvoiceFormate.format(nSysDate) + ".pdf");
                    nInvoiceFile.createNewFile();

                }

                pdfGenerator(nSysDate, nInvoiceFile);
                JOptionPane.showMessageDialog(null, "Invoice Generated.");

                uploadInvoice(nSysDate, nInvoiceFile);
            } catch (IOException | DocumentException x) {
                JOptionPane.showMessageDialog(null, x);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex);
            }

        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        clearAll();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void nCustomerNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nCustomerNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nCustomerNameTextFieldActionPerformed

    private void nCustomerNameTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nCustomerNameTextFieldKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_nCustomerNameTextFieldKeyTyped

    private void nCustomerNameTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nCustomerNameTextFieldFocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_nCustomerNameTextFieldFocusLost

    private void nDiscountTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nDiscountTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nDiscountTextFieldActionPerformed

    private void nBillingItemComboMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nBillingItemComboMouseClicked

    }//GEN-LAST:event_nBillingItemComboMouseClicked

    private void nRecivedAmountTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nRecivedAmountTextFieldKeyTyped
        // TODO add your handling code here:
        char nInputKey = evt.getKeyChar();
        if (Character.isDigit(nInputKey) != true && nInputKey != KeyEvent.VK_PERIOD) {
            evt.consume();
        }

    }//GEN-LAST:event_nRecivedAmountTextFieldKeyTyped

    private void nRecivedAmountTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nRecivedAmountTextFieldKeyReleased
        // TODO add your handling code here:
        double nReciveAmount;
        double nPaybleAmount;
        double nReturnAmount;

        if (nRecivedAmountTextField.getText().isEmpty()) {
            nReciveAmount = 0;
            nPaybleAmount = 0;
            nReturnAmount = nReciveAmount - nPaybleAmount;
            nReturnAmountTextField.setText(nDC.format(nReturnAmount));
        } else {
            nReciveAmount = Double.parseDouble(nRecivedAmountTextField.getText());
            nPaybleAmount = Double.parseDouble(nPaybleAmountTextField.getText());
            nReturnAmount = nReciveAmount - nPaybleAmount;
            nReturnAmountTextField.setText(nDC.format(nReturnAmount));
        }

    }//GEN-LAST:event_nRecivedAmountTextFieldKeyReleased

    private void nCustomerMobileTextField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nCustomerMobileTextField1FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_nCustomerMobileTextField1FocusLost

    private void nCustomerMobileTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nCustomerMobileTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nCustomerMobileTextField1ActionPerformed

    private void nCustomerMobileTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nCustomerMobileTextField1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_nCustomerMobileTextField1KeyTyped

    private void nDiscountTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nDiscountTextFieldKeyPressed
        char nKey = evt.getKeyChar();
        if (nKey == KeyEvent.VK_ENTER) {
            float nT, nPer, nPa;
            nT = Float.parseFloat(nTamountTextField.getText());
            nPer = Float.parseFloat(nDiscountTextField.getText());
            nPa = nT - (nT * (nPer / 100));
            nPaybleAmountTextField.setText(nDC.format(nPa));
        }
    }//GEN-LAST:event_nDiscountTextFieldKeyPressed

    public void loadSuggestion() {
        String nSQL = "select ITEM_NAME from item";
        try {
            nCon = ConnectDB.Connect();
            nPs = nCon.prepareStatement(nSQL);
            nRs = nPs.executeQuery();
            while (nRs.next()) {
                nSuggestiont.add(nRs.getString("ITEM_NAME"));
            }
            nCon.close();
            nPs.close();
            nRs.close();
        } catch (Exception x) {
            JOptionPane.showMessageDialog(null, x);
            System.exit(0);
        }
    }

    public void setModel(DefaultComboBoxModel nModel, String nStr) {
        nBillingItemCombo.setModel(nModel);
        nBillingItemCombo.setSelectedIndex(-1);
        nInputText.setText(nStr);
    }

    public DefaultComboBoxModel getSuggesionModel(List<String> nList, String nSearch) {
        DefaultComboBoxModel nSuggesionModel = new DefaultComboBoxModel();
        for (int i = 0; i < nList.size(); i++) {
            if (nList.get(i).startsWith(nSearch)) {
                nSuggesionModel.addElement(nList.get(i));
            }
        }
        return nSuggesionModel;
    }

    public void getSuggesion() {
        nBillingItemCombo.setEditable(true);
        nInputText = (JTextField) nBillingItemCombo.getEditor().getEditorComponent();
        nInputText.setFont(new Font("Courier New", Font.BOLD, 18));

        nInputText.addKeyListener(new KeyListener() {

            @Override
            public void keyTyped(KeyEvent e) {
                if (Character.isDigit(e.getKeyChar())) {
                    e.consume();
                }
                EventQueue.invokeLater(new Runnable() {

                    @Override
                    public void run() {
                        String nItemName = nInputText.getText().toUpperCase();
                        if (nItemName.isEmpty()) {
                            nBillingItemCombo.hidePopup();
                            setModel(new DefaultComboBoxModel(), nItemName);

                        } else {
                            DefaultComboBoxModel nMdl = getSuggesionModel(nSuggestiont, nItemName);
                            if (nMdl.getSize() == 0) {
                                nBillingItemCombo.hidePopup();
                            } else {
                                setModel(nMdl, nItemName);
                                nBillingItemCombo.showPopup();
                            }

                        }
                    }
                });
            }

            @Override
            public void keyPressed(KeyEvent e) {

            }

            @Override
            public void keyReleased(KeyEvent e) {

            }
        });

        nInputText.addFocusListener(new FocusListener() {

            @Override
            public void focusGained(FocusEvent e) {
                nInputText.requestFocusInWindow();
            }

            @Override
            public void focusLost(FocusEvent e) {
                String nQuery = "select item_rate,item_unit from item where item_name=?";
                try {

                    nCon = ConnectDB.Connect();
                    nPs = nCon.prepareStatement(nQuery);
                    nPs.setString(1, nInputText.getText().toUpperCase());
                    nRs = nPs.executeQuery();
                    if (nRs.next()) {
                        nItemRateTextField.setText(nRs.getString("item_rate"));
                        nBillingItemUnit = nRs.getString("item_unit");
                        nBillingItemQtyTextField.requestFocusInWindow();
                    }
                    nCon.close();
                    nPs.close();
                    nRs.close();
                } catch (Exception x) {
                    JOptionPane.showMessageDialog(null, x);
                }
            }
        });

    }

    public void loadTable() {

        Double nAmount;
        if (nInputText.getText().isEmpty() || nItemRateTextField.getText().isEmpty() || nBillingItemQtyTextField.getText().isEmpty()) {
            if (nInputText.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Item Name is Empty");
            } else if (nItemRateTextField.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Item Rate is Empty");
            } else {
                JOptionPane.showMessageDialog(null, "Item Quantity is Empty");
            }
        } else {
            nBillingItem = nInputText.getText();
            nBillingItemRate = Double.parseDouble(nItemRateTextField.getText());
            nBillingItemQty = Double.parseDouble(nBillingItemQtyTextField.getText());
            nAmount = nBillingItemQty * nBillingItemRate;
            String nAm = nDC.format(nAmount);
            String nTdata[] = {nBillingItem, nBillingItemQty.toString(), nBillingItemUnit, nBillingItemRate.toString(), nAm};
            DefaultTableModel nTM = (DefaultTableModel) nItemTable.getModel();
            nTM.addRow(nTdata);
            nInputText.setText("");
            nItemRateTextField.setText("");
            nBillingItemQtyTextField.setText("");
            nTotalQty = nTotalQty + nBillingItemQty;
            nGrandTotal = nGrandTotal + Double.parseDouble(nAm);
            nTamountTextField.setText("" + nDC.format(nGrandTotal));
            nTitemQty.setText("" + nTotalQty);
            nPaybleAmountTextField.setText("" + nDC.format(Double.parseDouble(nTamountTextField.getText().toString()) + Double.parseDouble(nDiscountTextField.getText().toString())));

        }

    }

    public static void addRowinTable(String obj[]) {
        DefaultTableModel td = (DefaultTableModel) nItemTable.getModel();
        td.addRow(obj);
        td.removeRow(nSelRow);

    }

    public static void updateTotal() {
        double nTotalpay;
        DefaultTableModel nDefaultModel = (DefaultTableModel) nItemTable.getModel();
        int nRowCount = nItemTable.getRowCount();
        nGrandTotal = 0.0;
        nTotalQty = 0.0;
        for (int i = 0; i < nRowCount; i++) {
            nGrandTotal = nGrandTotal + Double.parseDouble(nDefaultModel.getValueAt(i, 4).toString());
            nTotalQty = nTotalQty + Double.parseDouble(nDefaultModel.getValueAt(i, 1).toString());
        }
        nTotalpay = nGrandTotal + Double.parseDouble(nDiscountTextField.getText());
        nTamountTextField.setText("" + nGrandTotal);
        nTitemQty.setText("" + nTotalQty);
        nPaybleAmountTextField.setText("" + nTotalpay);
    }

    public void clearAll() {

        DefaultTableModel nDefaultModel = (DefaultTableModel) nItemTable.getModel();
        int nRowCount = nDefaultModel.getRowCount();
        // Static Variable Cleared
        nGrandTotal = 0.0;
        nTotalQty = 0.0;
        nSelRow = -1;
        // Classs Cleared
        nInputText.setText("");
        nBillingItemQtyTextField.setText("");
        nItemRateTextField.setText("");
        nCustomerNameTextField.setText("");
        nCustomerMobileTextField1.setText("");
        nTitemQty.setText("0");
        nTamountTextField.setText("0");
        nDiscountTextField.setText("0");
        nPaybleAmountTextField.setText("0");
        nRecivedAmountTextField.setText("");
        nReturnAmountTextField.setText("0");
        for (int i = nRowCount - 1; i >= 0; i--) {
            nDefaultModel.removeRow(i);
        }

    }

    public void pdfGenerator(Date nSysDate, File nInvoiceFile) throws Exception {
        DefaultTableModel nModelTable = (DefaultTableModel) nItemTable.getModel();
        DateFormat nDF = new SimpleDateFormat("dd-MM-yy\nHH:mm");
        DateFormat nInvoiceFormate = new SimpleDateFormat("ddHHmmss");
        Document nDOC = new Document(PageSize.A4, 5, 5, 5, 5);
        PdfWriter nWrite = PdfWriter.getInstance(nDOC, new FileOutputStream(nInvoiceFile));
        nDOC.open();

        nDOC.add(new Paragraph("           BILLING MASTER", FontFactory.getFont(BaseFont.COURIER_BOLD, 15)));
        nDOC.add(new Paragraph("  ==============================================================================================", FontFactory.getFont(BaseFont.COURIER_BOLD, 10)));

        com.itextpdf.text.Font nCustFont = FontFactory.getFont(BaseFont.COURIER_BOLD, 12);
        PdfPTable nCustomerTable = new PdfPTable(4);
        PdfPCell nCustomerTableCell = new PdfPCell();
        nCustomerTable.setWidthPercentage(100);
        nCustomerTable.setWidths(new int[]{12, 20, 10, 10});

        nCustomerTableCell = new PdfPCell(new Phrase("CUSTOMER NAME", nCustFont));
        nCustomerTableCell.setPaddingLeft(10);
        nCustomerTableCell.setBorder(Rectangle.NO_BORDER);
        nCustomerTable.addCell(nCustomerTableCell);

        nCustomerTableCell = new PdfPCell(new Phrase(nCustomerNameTextField.getText().toUpperCase().toString(), nCustFont));
        nCustomerTableCell.setBorder(Rectangle.NO_BORDER);
        nCustomerTable.addCell(nCustomerTableCell);

        nCustomerTableCell = new PdfPCell(new Phrase("CUSTOMER PHONE:", nCustFont));
        nCustomerTableCell.setBorder(Rectangle.NO_BORDER);
        nCustomerTable.addCell(nCustomerTableCell);

        nCustomerTableCell = new PdfPCell(new Phrase(nCustomerMobileTextField1.getText().toString(), nCustFont));
        nCustomerTableCell.setBorder(Rectangle.NO_BORDER);
        nCustomerTableCell.setPaddingRight(10);
        nCustomerTable.addCell(nCustomerTableCell);

        nCustomerTableCell = new PdfPCell(new Phrase("INVOICE NUMBER:", nCustFont));
        nCustomerTableCell.setPaddingLeft(10);
        nCustomerTableCell.setBorder(Rectangle.NO_BORDER);
        nCustomerTable.addCell(nCustomerTableCell);

        nCustomerTableCell = new PdfPCell(new Phrase(nInvoiceFormate.format(nSysDate), nCustFont));
        nCustomerTableCell.setBorder(Rectangle.NO_BORDER);
        nCustomerTable.addCell(nCustomerTableCell);

        nCustomerTableCell = new PdfPCell(new Phrase("DATE & TIME:", nCustFont));
        nCustomerTableCell.setBorder(Rectangle.NO_BORDER);
        nCustomerTable.addCell(nCustomerTableCell);

        nCustomerTableCell = new PdfPCell(new Phrase(nDF.format(nSysDate), nCustFont));
        nCustomerTableCell.setBorder(Rectangle.NO_BORDER);
        nCustomerTableCell.setPaddingRight(10);
        nCustomerTable.addCell(nCustomerTableCell);

        nDOC.add(nCustomerTable);

        nDOC.add(new Paragraph("  ==============================================================================================", FontFactory.getFont(BaseFont.COURIER_BOLD, 10)));
        nDOC.add(new Paragraph("  SL NO   ITEM NAME                                      QTY     UNIT     RATE            AMOUNT", FontFactory.getFont(BaseFont.COURIER_BOLD, 10)));
        nDOC.add(new Paragraph("  ==============================================================================================", FontFactory.getFont(BaseFont.COURIER_BOLD, 10)));
        PdfPTable nItemDetailsTable = new PdfPTable(6);
        PdfPCell nItemDetailsTableCell = new PdfPCell();
        nItemDetailsTable.setWidthPercentage(100);
        nItemDetailsTable.setWidths(new int[]{5, 23, 5, 5, 5, 10});
        com.itextpdf.text.Font nMyFont = FontFactory.getFont(BaseFont.COURIER_BOLD, 12);
        for (int i = 0; i < nItemTable.getRowCount(); i++) {
            String nSL = "" + (i + 1);
            nItemDetailsTableCell = new PdfPCell(new Phrase(nSL, nMyFont));
            nItemDetailsTableCell.setBorder(Rectangle.NO_BORDER);
            nItemDetailsTableCell.setHorizontalAlignment(Element.ALIGN_LEFT);
            nItemDetailsTableCell.setPaddingLeft(12);
            nItemDetailsTable.addCell(nItemDetailsTableCell);
            nItemDetailsTableCell = new PdfPCell(new Phrase(nModelTable.getValueAt(i, 0).toString(), nMyFont));
            nItemDetailsTableCell.setBorder(Rectangle.NO_BORDER);
            nItemDetailsTableCell.setHorizontalAlignment(Element.ALIGN_LEFT);
            nItemDetailsTableCell.setPaddingLeft(4);
            nItemDetailsTable.addCell(nItemDetailsTableCell);
            nItemDetailsTableCell = new PdfPCell(new Phrase(nModelTable.getValueAt(i, 1).toString(), nMyFont));
            nItemDetailsTableCell.setBorder(Rectangle.NO_BORDER);
            nItemDetailsTableCell.setHorizontalAlignment(Element.ALIGN_RIGHT);
            nItemDetailsTable.addCell(nItemDetailsTableCell);
            nItemDetailsTableCell = new PdfPCell(new Phrase(nModelTable.getValueAt(i, 2).toString(), nMyFont));
            nItemDetailsTableCell.setBorder(Rectangle.NO_BORDER);
            nItemDetailsTableCell.setHorizontalAlignment(Element.ALIGN_RIGHT);
            nItemDetailsTable.addCell(nItemDetailsTableCell);
            nItemDetailsTableCell = new PdfPCell(new Phrase(nModelTable.getValueAt(i, 3).toString(), nMyFont));
            nItemDetailsTableCell.setBorder(Rectangle.NO_BORDER);
            nItemDetailsTableCell.setHorizontalAlignment(Element.ALIGN_RIGHT);
            nItemDetailsTableCell.setPaddingRight(5);
            nItemDetailsTable.addCell(nItemDetailsTableCell);
            nItemDetailsTableCell = new PdfPCell(new Phrase(nModelTable.getValueAt(i, 4).toString(), nMyFont));
            nItemDetailsTableCell.setBorder(Rectangle.NO_BORDER);
            nItemDetailsTableCell.setHorizontalAlignment(Element.ALIGN_RIGHT);
            nItemDetailsTableCell.setPaddingRight(10);
            nItemDetailsTable.addCell(nItemDetailsTableCell);
        }

        nDOC.add(nItemDetailsTable);
        nDOC.add(new Paragraph("  ==============================================================================================", FontFactory.getFont(BaseFont.COURIER_BOLD, 10)));
        PdfPTable nTotalTable = new PdfPTable(4);
        PdfPCell nTotalTableCell = new PdfPCell();
        nTotalTable.setWidthPercentage(100);
        nTotalTable.setWidths(new float[]{25, 10, 10, 10});

        nTotalTableCell = new PdfPCell(new Phrase("TOTAL QTY:", nMyFont));
        nTotalTableCell.setBorder(Rectangle.NO_BORDER);
        nTotalTableCell.setHorizontalAlignment(Element.ALIGN_RIGHT);
        nTotalTable.addCell(nTotalTableCell);

        nTotalTableCell = new PdfPCell(new Phrase(nTitemQty.getText().toString(), nMyFont));
        nTotalTableCell.setBorder(Rectangle.NO_BORDER);
        nTotalTableCell.setHorizontalAlignment(Element.ALIGN_RIGHT);
        nTotalTableCell.setPaddingRight(10);
        nTotalTable.addCell(nTotalTableCell);

        nTotalTableCell = new PdfPCell(new Phrase("SUB TOTAL:", nMyFont));
        nTotalTableCell.setBorder(Rectangle.NO_BORDER);
        nTotalTableCell.setHorizontalAlignment(Element.ALIGN_LEFT);
        nTotalTableCell.setPaddingLeft(12);
        nTotalTable.addCell(nTotalTableCell);

        nTotalTableCell = new PdfPCell(new Phrase(nTamountTextField.getText().toString(), nMyFont));
        nTotalTableCell.setBorder(Rectangle.NO_BORDER);
        nTotalTableCell.setHorizontalAlignment(Element.ALIGN_RIGHT);
        nTotalTableCell.setPaddingRight(10);
        nTotalTable.addCell(nTotalTableCell);

        nDOC.add(nTotalTable);

        PdfPTable nBillingDetailsTable = new PdfPTable(2);
        PdfPCell nBillingDetailsTableCell = new PdfPCell();
        nBillingDetailsTable.setWidthPercentage(50);
        nBillingDetailsTable.setHorizontalAlignment(Element.ALIGN_RIGHT);
        nBillingDetailsTable.setWidths(new int[]{70, 30});

        nBillingDetailsTableCell = new PdfPCell(new Phrase("DISCOUNT:", nMyFont));
        nBillingDetailsTableCell.setPaddingLeft(90);
        nBillingDetailsTableCell.setBorder(Rectangle.NO_BORDER);
        nBillingDetailsTable.addCell(nBillingDetailsTableCell);

        nBillingDetailsTableCell = new PdfPCell(new Phrase(nDiscountTextField.getText().toString(), nMyFont));
        nBillingDetailsTableCell.setHorizontalAlignment(Element.ALIGN_RIGHT);
        nBillingDetailsTableCell.setPaddingRight(10);
        nBillingDetailsTableCell.setBorder(Rectangle.NO_BORDER);
        nBillingDetailsTable.addCell(nBillingDetailsTableCell);

        nBillingDetailsTableCell = new PdfPCell(new Phrase("PAYBLE AMOUNT:", nMyFont));
        nBillingDetailsTableCell.setPaddingLeft(90);
        nBillingDetailsTableCell.setBorder(Rectangle.NO_BORDER);
        nBillingDetailsTable.addCell(nBillingDetailsTableCell);

        nBillingDetailsTableCell = new PdfPCell(new Phrase(nPaybleAmountTextField.getText().toString(), nMyFont));
        nBillingDetailsTableCell.setHorizontalAlignment(Element.ALIGN_RIGHT);
        nBillingDetailsTableCell.setPaddingRight(10);
        nBillingDetailsTableCell.setBorder(Rectangle.NO_BORDER);
        nBillingDetailsTable.addCell(nBillingDetailsTableCell);

        nBillingDetailsTableCell = new PdfPCell(new Phrase("RECIVED AMOUNT:", nMyFont));
        nBillingDetailsTableCell.setPaddingLeft(90);
        nBillingDetailsTableCell.setBorder(Rectangle.NO_BORDER);
        nBillingDetailsTable.addCell(nBillingDetailsTableCell);

        nBillingDetailsTableCell = new PdfPCell(new Phrase(nRecivedAmountTextField.getText(), nMyFont));
        nBillingDetailsTableCell.setHorizontalAlignment(Element.ALIGN_RIGHT);
        nBillingDetailsTableCell.setPaddingRight(10);
        nBillingDetailsTableCell.setBorder(Rectangle.NO_BORDER);
        nBillingDetailsTable.addCell(nBillingDetailsTableCell);

        nBillingDetailsTableCell = new PdfPCell(new Phrase("RETURN AMOUNT:", nMyFont));
        nBillingDetailsTableCell.setPaddingLeft(90);
        nBillingDetailsTableCell.setBorder(Rectangle.NO_BORDER);
        nBillingDetailsTable.addCell(nBillingDetailsTableCell);

        nBillingDetailsTableCell = new PdfPCell(new Phrase(nReturnAmountTextField.getText(), nMyFont));
        nBillingDetailsTableCell.setHorizontalAlignment(Element.ALIGN_RIGHT);
        nBillingDetailsTableCell.setPaddingRight(10);
        nBillingDetailsTableCell.setBorder(Rectangle.NO_BORDER);
        nBillingDetailsTable.addCell(nBillingDetailsTableCell);

        nDOC.add(nBillingDetailsTable);
        nDOC.add(new Paragraph("  ==============================================================================================", FontFactory.getFont(BaseFont.COURIER_BOLD, 10)));
        nDOC.add(new Paragraph("  EXTRA INFORMATION: " + nExtraInfoTextArea.getText().toUpperCase(), FontFactory.getFont(BaseFont.COURIER_BOLD, 10)));
        nDOC.close();
        nWrite.close();
    }

    public void uploadInvoice(Date nDate, File nInvoFile) throws Exception {
        String nSQL = "insert into invoice_info values (?,?,?,?,?)";
        DateFormat nDateFormate = new SimpleDateFormat("dd-MM-yy");
        DateFormat nInvoFormate = new SimpleDateFormat("ddHHmmss");
        FileInputStream nFIS = new FileInputStream(nInvoFile);
        ByteArrayOutputStream nBAOS = new ByteArrayOutputStream();
        byte nByteArray[] = new byte[1024];
        for (int len; (len = nFIS.read(nByteArray)) != -1;) {
            nBAOS.write(nByteArray, 0, len);
        }
        nFIS.close();
        nCon = ConnectDB.Connect();
        nPs = nCon.prepareStatement(nSQL);
        nPs.setString(1, nInvoFormate.format(nDate));
        nPs.setString(2, nCustomerNameTextField.getText());
        nPs.setString(3, nCustomerNameTextField.getText());
        nPs.setString(4, nDateFormate.format(nDate));
        nPs.setBytes(5, nBAOS.toByteArray());
        nPs.executeUpdate();
        nCon.close();
        nPs.close();

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                BillingSystem.createObject().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JComboBox nBillingItemCombo;
    private javax.swing.JTextField nBillingItemQtyTextField;
    private javax.swing.JTextField nCustomerMobileTextField1;
    private javax.swing.JTextField nCustomerNameTextField;
    private static javax.swing.JTextField nDiscountTextField;
    private javax.swing.JTextArea nExtraInfoTextArea;
    private javax.swing.JTextField nItemRateTextField;
    public static javax.swing.JTable nItemTable;
    private static javax.swing.JTextField nPaybleAmountTextField;
    private javax.swing.JTextField nRecivedAmountTextField;
    private javax.swing.JTextField nReturnAmountTextField;
    private static javax.swing.JTextField nTamountTextField;
    private static javax.swing.JTextField nTitemQty;
    // End of variables declaration//GEN-END:variables
}
