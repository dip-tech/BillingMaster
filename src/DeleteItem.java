
import java.awt.EventQueue;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.List;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

public class DeleteItem extends javax.swing.JFrame {
    
    Connection nCon = null;
    PreparedStatement nPs = null;
    ResultSet nRs = null;
    int nRe = 0;
    String nSelectedItem, nSelectedItemRate;
    int nSelectedRow = -1;
    JTextField nSearchItem = new JTextField();
    Vector<String> nVector = new <String> Vector();
    
    public DeleteItem() {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
        Toolkit nToolKit = Toolkit.getDefaultToolkit();
        setIconImage(nToolKit.getImage(getClass().getResource("icon/icon.png")));
        initComponents();
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            
            @Override
            public void windowClosing(WindowEvent e) {
                dispose();
                super.windowClosing(e); //To change body of generated methods, choose Tools | Templates.
            }
            
        });
        JTableHeader tableHeader = nDelTable.getTableHeader();
        tableHeader.setFont(new Font("Courier New", Font.BOLD, 24));
        
        loadTableData();
        loadSuggesion();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        nDelTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        nSearchDelItemCombo = new javax.swing.JComboBox();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("BILLING MASTER");
        setMinimumSize(new java.awt.Dimension(1500, 800));
        setResizable(false);
        setSize(new java.awt.Dimension(1500, 800));

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setMaximumSize(new java.awt.Dimension(1920, 1080));
        jPanel1.setMinimumSize(new java.awt.Dimension(0, 0));
        jPanel1.setPreferredSize(new java.awt.Dimension(0, 0));
        jPanel1.setLayout(null);

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "DELETE ITEM DETAILS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_BOTTOM, new java.awt.Font("Arial", 1, 18), new java.awt.Color(51, 153, 255))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1908, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 15, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel2);
        jPanel2.setBounds(0, 0, 1920, 50);

        nDelTable.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        nDelTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ITEM NAME", "ITEM RATE", "UNIT", "ITEM NATURE"
            }
        ));
        nDelTable.setFocusable(false);
        nDelTable.setInheritsPopupMenu(true);
        nDelTable.setRowHeight(30);
        nDelTable.setSelectionBackground(new java.awt.Color(255, 102, 102));
        nDelTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nDelTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(nDelTable);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(30, 220, 1260, 470);

        jButton1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(51, 153, 255));
        jButton1.setText("DELETE ITEM");
        jButton1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 2, true));
        jButton1.setContentAreaFilled(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(1330, 190, 140, 40);

        nSearchDelItemCombo.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        jPanel1.add(nSearchDelItemCombo);
        nSearchDelItemCombo.setBounds(990, 100, 300, 40);

        jButton2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(51, 153, 255));
        jButton2.setText("SEARCH");
        jButton2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 2, true));
        jButton2.setContentAreaFilled(false);
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(1330, 100, 140, 40);

        jButton3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 51, 51));
        jButton3.setText("CLEAR");
        jButton3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 51, 51), 2, true));
        jButton3.setContentAreaFilled(false);
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3);
        jButton3.setBounds(1330, 280, 140, 40);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1500, Short.MAX_VALUE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void nDelTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nDelTableMouseClicked
        // TODO add your handling code here:

        nSelectedRow = nDelTable.getSelectedRow();
        DefaultTableModel nDT = (DefaultTableModel) nDelTable.getModel();
        nSelectedItem = nDT.getValueAt(nSelectedRow, 0).toString();
        nSelectedItemRate = nDT.getValueAt(nSelectedRow, 1).toString();
        

    }//GEN-LAST:event_nDelTableMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String nQuery = "delete from ITEM where ITEM_NAME=? and ITEM_RATE=?";
        if (nSelectedItem == null || nSelectedItemRate == null) {
            JOptionPane.showMessageDialog(null, "Please Select Item for Delete");
        } else {
            try {
                nCon = ConnectDB.Connect();
                nPs = nCon.prepareStatement(nQuery);
                nPs.setString(1, nSelectedItem);
                nPs.setString(2, nSelectedItemRate);
                nRe = nPs.executeUpdate();
                if (nRe != 0) {
                    DefaultTableModel nTableModel = (DefaultTableModel) nDelTable.getModel();
                    nTableModel.removeRow(nSelectedRow);
                    JOptionPane.showMessageDialog(null, "Item Details Succesfully Deleted");
                }
                
                nCon.close();
                nPs.close();
                nRe = 0;
            } catch (Exception x) {
                JOptionPane.showMessageDialog(null, x);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        nSearchItem.setText("");
        String nsql = "select * from ITEM";
        DefaultTableModel nDM = (DefaultTableModel) nDelTable.getModel();
        nDM.setRowCount(0);
        try {
            nCon = ConnectDB.Connect();
            nPs = nCon.prepareStatement(nsql);
            nRs = nPs.executeQuery();
            while (nRs.next()) {
                String nTBdata[] = {nRs.getString("ITEM_NAME"), nRs.getString("ITEM_RATE"), nRs.getString("ITEM_UNIT"), nRs.getString("ITEM_NATURE")};
                DefaultTableModel nDTM = (DefaultTableModel) nDelTable.getModel();
                nDTM.addRow(nTBdata);
            }
            nCon.close();
            nPs.close();
            nRs.close();
        } catch (Exception xe) {
            JOptionPane.showMessageDialog(null, xe);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String nItemName = nSearchItem.getText().toUpperCase();
        String nSQL = "select * from item where item_name=?";
        DefaultTableModel nTableModel = (DefaultTableModel) nDelTable.getModel();
        nTableModel.setRowCount(0);
        try {
            nCon = ConnectDB.Connect();
            nPs = nCon.prepareStatement(nSQL);
            nPs.setString(1, nItemName);
            nRs = nPs.executeQuery();
            while (nRs.next()) {
                String nTableData[] = {nRs.getString("item_name"), nRs.getString("item_rate"), nRs.getString("item_unit"), nRs.getString("item_nature")};
                DefaultTableModel nTabModl = (DefaultTableModel) nDelTable.getModel();
                nTabModl.addRow(nTableData);
            }
        } catch (Exception x) {
            JOptionPane.showMessageDialog(null, x);
        } finally {
            try {
                nCon.close();
                nPs.close();
                nRs.close();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public void loadTableData() {
        
        String nsql = "select * from ITEM";
        try {
            nCon = ConnectDB.Connect();
            nPs = nCon.prepareStatement(nsql);
            nRs = nPs.executeQuery();
            while (nRs.next()) {
                String nTBdata[] = {nRs.getString("ITEM_NAME"), nRs.getString("ITEM_RATE"), nRs.getString("ITEM_UNIT"), nRs.getString("ITEM_NATURE")};
                DefaultTableModel nDTM = (DefaultTableModel) nDelTable.getModel();
                nDTM.addRow(nTBdata);
                nVector.add(nRs.getString("ITEM_NAME"));
            }
            nCon.close();
            nPs.close();
            nRs.close();
        } catch (Exception xe) {
            JOptionPane.showMessageDialog(null, xe);
        }
        
    }
    
    public void setSuggesionModel(DefaultComboBoxModel nComboModel, String nSearch) {
        nSearchDelItemCombo.setModel(nComboModel);
        nSearchDelItemCombo.setSelectedIndex(-1);
        nSearchItem.setText(nSearch);
    }
    
    public DefaultComboBoxModel getSuggesionModel(List<String> nList, String nStr) {
        DefaultComboBoxModel nCombo = new DefaultComboBoxModel();
        for (int i = 0; i < nList.size(); i++) {
            if (nList.get(i).startsWith(nStr)) {
                nCombo.addElement(nList.get(i));
            }
        }
        return nCombo;
    }
    
    public void loadSuggesion() {
        nSearchDelItemCombo.setEditable(true);
        nSearchItem = (JTextField) nSearchDelItemCombo.getEditor().getEditorComponent();
        nSearchItem.addKeyListener(new KeyListener() {
            @Override
            public void keyTyped(KeyEvent e) {
                
                EventQueue.invokeLater(new Runnable() {
                    
                    @Override
                    public void run() {
                        String nSearchString = nSearchItem.getText().toUpperCase();
                        if (nSearchString.length() == 0) {
                            setSuggesionModel(new DefaultComboBoxModel(), nSearchString);
                            nSearchDelItemCombo.hidePopup();
                        } else {
                            DefaultComboBoxModel nCMD = getSuggesionModel(nVector, nSearchString);
                            if (nCMD.getSize() == 0) {
                                nSearchDelItemCombo.hidePopup();
                            } else {
                                setSuggesionModel(nCMD, nSearchString);
                                nSearchDelItemCombo.showPopup();
                            }
                        }
                    }
                });
            }
            
            @Override
            public void keyPressed(KeyEvent e) {
                
            }
            
            @Override
            public void keyReleased(KeyEvent e) {
                
            }
        });
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DeleteItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DeleteItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DeleteItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DeleteItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DeleteItem().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable nDelTable;
    private javax.swing.JComboBox nSearchDelItemCombo;
    // End of variables declaration//GEN-END:variables
}
